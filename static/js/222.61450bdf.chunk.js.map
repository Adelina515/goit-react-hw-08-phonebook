{"version":3,"file":"static/js/222.61450bdf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnSubm\":\"ContactForm_btnSubm__qp7cj\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const toLowerCaseFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLowerCaseFilter)\n    );\n  }\n);\n","import { useState } from 'react';\nimport style from 'components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilterContacts);\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    const isContact = contacts.find(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n    if (isContact) {\n      alert('contact already exist');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        name=\"name\"\n        value={name}\n        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label>Number</label>\n      <input\n        type=\"tel\"\n        onChange={onChange}\n        value={number}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={style.btnSubm} type=\"submit\">\n        {' '}\n        Add contact{' '}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactList_li__dzNT+\",\"spanName\":\"ContactList_spanName__gYHek\",\"spanNumber\":\"ContactList_spanNumber__wm1T3\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import style from 'components/ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilterContacts);\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li className={style.li} key={contact.id}>\n          <span className={style.spanName}>{contact.name}: </span>\n          <span className={style.spanNumber}>{contact.number} </span>\n          <button\n            className={style.btnDelete}\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"labelFil\":\"Filter_labelFil__6xZzd\",\"inputFil\":\"Filter_inputFil__Ko+9+\"};","import style from 'components/Filter/Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  const hendleChange = event => {\n    const filterValue = event.target.value.toLocaleLowerCase();\n    dispatch(setFilter(filterValue));\n  };\n  return (\n    <>\n      <label className={style.labelFil}> Find contacts by name </label>\n      <input\n        className={style.inputFil}\n        type=\"text\"\n        onChange={hendleChange}\n        name=\"filter\"\n        value={value}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <div style={{ padding: 0 }}>\n        <h2\n          style={{\n            textAlign: 'center',\n            fontSize: 40,\n          }}\n        >\n          Phonebook\n        </h2>\n        <ContactForm />\n        <h2\n          style={{\n            textAlign: 'center',\n            fontSize: 40,\n          }}\n        >\n          Contacts\n        </h2>\n        {contacts?.length === 0 ? (\n          <p\n            style={{\n              paddingBottom: 10,\n              textAlign: 'center',\n              fontSize: 24,\n            }}\n          >\n            Haven't got contacts. Please, add contact{' '}\n          </p>\n        ) : (\n          <Filter />\n        )}\n        {contacts?.length > 0 && <ContactList />}\n      </div>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectFilterContacts","createSelector","toLowerCaseFilter","toLowerCase","contact","name","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","onChange","e","target","value","onSubmit","preventDefault","find","trim","alert","addContact","type","pattern","title","required","className","style","map","onClick","deleteContact","id","event","filterValue","toLocaleLowerCase","setFilter","Contacts","useEffect","fetchContacts","padding","textAlign","fontSize","length","paddingBottom"],"sourceRoot":""}